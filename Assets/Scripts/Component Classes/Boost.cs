using UnityEngine;
using System.Collections;

public class Boost : Powerup {
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// 								     		PUBLIC VARIABLES											     ///
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	public float duration;	// The duration the boost lasts

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// 								     		PRIVATE VARIABLES											     ///
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	private Renderer _renderer;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// 								     		PRIVATE FUNCTION												 ///
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>
	/// Called to apply the boost. Handles pausing for the duration and then calling finish
	/// </summary>
	private IEnumerator _apply() {
		// Call base to use the powerup
		base.use();

		// Call extension to initiate the boost
		initiate();

		// Yield for the duration of the boost
		yield return new WaitForSeconds(duration);

		// Call extension to finish the boost
		finish();
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// 								     		PROTECTED FUNCTION											     ///
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>
	/// Extension point to be used for initiation of the boost
	/// </summary>
	protected virtual void initiate() {}

	/// <summary>
	/// Extenstion point to be used for finishing the boost
	/// </summary>
	protected virtual void finish() {
		// Call the base to remove from the scene
		base.remove();
	}

	/// <summary>
	/// Override the base version to enable soft delete so the script can finish before destroying the game object
	/// </summary>
	protected override void remove() {
		// Soft delete the object until the scripts finish
		GetComponent<BoxCollider2D>().enabled = false;
		GetComponent<Renderer>().enabled = false;
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// 								     		PUBLIC FUNCTION												     ///
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>
	/// Called when the boost is going to be used
	/// </summary>
	public override void use() {
		StartCoroutine(_apply());
	}
}
   